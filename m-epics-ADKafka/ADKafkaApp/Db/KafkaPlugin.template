#=================================================================#
# Template file: KafkaPlugin.template

include "NDPluginBase.template"

record(longin, "$(P)$(R)UnsentPackets_RBV") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_UNSENT_PACKETS")
	field(SCAN, "I/O Intr")		#Update value on interrupt
}

record(mbbi, "$(P)$(R)ConnectionStatus_RBV") #Multi bit binary input
{
   field(DTYP, "asynInt32")	#Data type
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_CONNECTION_STATUS")
   field(ZRST, "Connected")
   field(ZRVL, "0")
   field(ONST, "Connecting")
   field(ONVL, "1")
   field(TWST, "Disconnected")
   field(TWVL, "2")
   field(THST, "Error")
   field(THVL, "3")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)ConnectionMessage_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_CONNECTION_MESSAGE")
    #field(FTVL, "CHAR")		#Waveform data type
    #field(NELM, "256")		#Number of elements
    field(SCAN, "I/O Intr")	#Update value on interrupt
}

record(stringout, "$(P)$(R)KafkaAddress")
{
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_ADDR")
    #field(FTVL, "CHAR")
    #field(NELM, "256")
    #info(autosaveFields, "VAL")	#Save value of record and restore on reboot
	field(PINI, "NO")
}

record(stringin, "$(P)$(R)KafkaAddress_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_ADDR")
    #field(FTVL, "CHAR")
    #field(NELM, "256")
    field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)KafkaTopic")
{
	#field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_TOPIC")
    #field(FTVL, "DBF_STRING")
    #field(NELM, "256")
	field(PINI, "NO")
}

record(stringin, "$(P)$(R)KafkaTopic_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_TOPIC")
    #field(FTVL, "DBF_STRING")
    #field(NELM, "256")
	field(SCAN, "I/O Intr")
}
